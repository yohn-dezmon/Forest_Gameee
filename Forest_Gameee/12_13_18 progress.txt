12.13.18

What I've done to New_Forest_game
(1) I made prompt a method in the Scene class (just so I can use another method)
(2) I made nothing a method in the Scene class, because it is something that will be called in every scene! and it also always has the same output! I accomplished this
by taking what I had written in the nothing method in Edge, which consisted of a print
statement, then reassigning self.up, then calling the prompt method... and writing that in
the Scene_ class... then just doing the super(Edge_, self).nothing() in the Edge_ version
of the method to call it. boom!
(3)



12.14.18
(1) I added the Character_() class in the charac_fg.py file.
(2) I added an attribute of this class to be the characters inventory.
(3) I added the crawl function to Thorn
(4) I tried to add the 'gold_key' to the character inventory!
(5) I added a health attribute to the character class, and set it equal to int 10.
(6) hmmmm the attribute that I have for health is able to be updated in multiple classes
but I need that value to stay constant over classes... how can I do this?


12.15.18
(1) I still want to create a return function... maybe in scene??? or maybe in thorn idk...

12.16.18
(1) YAY, I figured out how to add scene specific actions to the prompt in the Scene (parent) 
class! woohoo! so in the elif statement, you put the words that lead to the action and then
you also write 'and self.name == "name of room"'. So cool! 
(2) when you have a long list for an elif statement, and you are joining it with an and keyword
make sure that you have the ending bracket and and on the same line! (LOOK AT PEP8)
(3) accidentally found a bug, I cannot go back into Thorny patch after returning from it (Edge).... or go into the Pile scene... 
(4) still working on number 3, maybe using while loops in the runner?

12.17.18
(1) ok since I found that bug, I've just been working on trying to make a Runner class
that actually allows me to enter and leave any room as many times as I want.
What I realized is that instead of using if loops, it's better to use while loops b/c they
obviously can run more than once (although I probably could have figured it out with 
for loops as well). 
Anyways... The way I fixed it was by ..
1. having one "start" function that initiates edge
2. establishing a class variable called location that is set equal to the self.name of
each scene
2. within the runner start function, having a while loop that reads true when the character
location is == to the self.name string.
3. splitting up the entrances into the other rooms into separate functions (into_x)
4. from the move function of each scene, having a statement that says if x.right == 'str'
then go into the entrance function. if there are multiple rooms having an elif with the same thing for a different room. 
5. In each the into_x functions, instantiating the class, by accessing it from the dict using the string of its name. [access the value with dictionary.get('str')
6. including the conditional (on name) while loops there as well, and making sure that
they ended by going into a specific scene. 
(2) we also cleaned up the enter and examine functions (and enter again) on our scenes 
by including if statements in the Scene parent class enter function! yay!
an important thing to note is that even if in the parent class
if you use a self.examine (referring to an attribute) it will refer to the subclass that
you're in! wooo! wait.... no I was wrong... if you are referring to an attribute...
maybe I just did it wrong... ok next bug! lol. 



